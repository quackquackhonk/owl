# functions in Owl are curried by default
# function signatures reflect this :)
typ sum4 is Int -> Int -> Int -> Int -> Int;
let sum4 a b c d be a + b + c + d;

# function application is with spaces like ML / Haskell
typ sum3 is Int -> Int -> Int -> Int;
let sum3 be sum4 1;

# you can use the $ operator like in Haskell
# this is the same as writing `sum3 2 (5 + 5)`
typ sum1 is Int -> Int;
let sum1 be sum3 2 $ 5 + 5;

20 = sum1 7